version: '3.8'

services:
  webserver:
    image: nginx:latest
    ports:
      - "8000:8000"
    volumes:
      - ./web/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - frontend_network
      - backend_network
    depends_on:
      - frontend
      - backend
    restart: always

  frontend:
    build: ./client
    ports:
      - "3000:3000"
    networks:
      - frontend_network
    restart: always
  
  backend:
    build: ./server
    ports:
      - "8080:8080"
    networks:
      - frontend_network
      - backend_network
    depends_on:
      - postgres
    restart: always

  postgres:
    image: "postgres:16"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: movie
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "5432:5432"
    networks:
      - backend_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always

networks:
  frontend_network:
    driver: bridge
  backend_network:
    driver: bridge

volumes:
  postgres_data: